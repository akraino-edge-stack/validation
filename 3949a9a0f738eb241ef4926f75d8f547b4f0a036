{
  "comments": [
    {
      "key": {
        "uuid": "3c52d779_410e4040",
        "filename": "bluval/bluval-base.yaml",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 43
      },
      "writtenOn": "2019-04-05T12:23:16Z",
      "side": 1,
      "message": "Same question as on PS5, why include a list of dictionary keys in the dictionary? This seems like an odd way to design a data structure.",
      "revId": "3949a9a0f738eb241ef4926f75d8f547b4f0a036",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3531e5a_42484f31",
        "filename": "bluval/bluval-base.yaml",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 67
      },
      "writtenOn": "2019-04-05T21:27:09Z",
      "side": 1,
      "message": "We need to maintain the order.",
      "parentUuid": "3c52d779_410e4040",
      "revId": "3949a9a0f738eb241ef4926f75d8f547b4f0a036",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15fe62de_7f09986c",
        "filename": "bluval/bluval-base.yaml",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 43
      },
      "writtenOn": "2019-04-08T12:28:29Z",
      "side": 1,
      "message": "In that case, why not make it a list in YAML? Making a dictionary and storing a list of dictionary keys is a strange way to structure data. Just move your ordered list of dictionaries up into the list.",
      "parentUuid": "d3531e5a_42484f31",
      "revId": "3949a9a0f738eb241ef4926f75d8f547b4f0a036",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ce5bfd7_b6bd0b99",
        "filename": "bluval/bluval-base.yaml",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 67
      },
      "writtenOn": "2019-04-09T05:22:52Z",
      "side": 1,
      "message": "Each layer is created as a map and it has an anchor. In this case we can extended this map.\n\nWe can assign anchors to sequence but those can\u0027t be merged. So I have to go with structure for now.",
      "parentUuid": "d3531e5a_42484f31",
      "revId": "3949a9a0f738eb241ef4926f75d8f547b4f0a036",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb5ebafa_db43bf07",
        "filename": "bluval/bluval-base.yaml",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 146
      },
      "writtenOn": "2019-04-05T08:20:21Z",
      "side": 1,
      "message": "Please see Paul\u0027s comment on patch set 5",
      "revId": "3949a9a0f738eb241ef4926f75d8f547b4f0a036",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8cf1374_43cfe1ee",
        "filename": "bluval/bluval.py",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 146
      },
      "writtenOn": "2019-04-05T08:20:21Z",
      "side": 1,
      "message": "this approach requires\nstatus \u003d subprocess.call(cmd, shell\u003dTrue)",
      "revId": "3949a9a0f738eb241ef4926f75d8f547b4f0a036",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fe503f6_dffc52fd",
        "filename": "bluval/bluval.py",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 43
      },
      "writtenOn": "2019-04-05T12:23:16Z",
      "side": 1,
      "message": "Some consideration should also be given to whether we want to allow arbitrary shell commands. This is ok for now, but we do need to give some thought to whether there\u0027s any possibility of unsanitized code getting injected into the CI. I\u0027m still fuzzy on the details of our CI pipelines, but in my experience with other projects (and with Zuul based CI) is that some tests are run on every change submitted to CI, even before human review. We don\u0027t want to allow a vector where someone could inject shell exploit code into a Gerrit commit.",
      "parentUuid": "f8cf1374_43cfe1ee",
      "revId": "3949a9a0f738eb241ef4926f75d8f547b4f0a036",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02f75609_f99d7064",
        "filename": "bluval/bluval.py",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 150
      },
      "writtenOn": "2019-04-05T12:25:38Z",
      "side": 1,
      "message": "I agree with Paul here. Instead of doing ssh to the cluster, it\u0027s cleaner to have a separate container (that runs on the jumpserver, not in the cluster) that has kubectl in it and can connect to the cluster, but runs locally all the commands.\n\nThis way you can put all the necessary tools in the validation container, instead of alterating the cluster.",
      "parentUuid": "6fe503f6_dffc52fd",
      "revId": "3949a9a0f738eb241ef4926f75d8f547b4f0a036",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e892529a_c90d5682",
        "filename": "bluval/bluval.py",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 67
      },
      "writtenOn": "2019-04-05T21:27:09Z",
      "side": 1,
      "message": "Agree with container concept but we will convert all these files into container as part of separate task.",
      "parentUuid": "02f75609_f99d7064",
      "revId": "3949a9a0f738eb241ef4926f75d8f547b4f0a036",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c14cd1d1_bd2c9d12",
        "filename": "bluval/bluval.py",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 146
      },
      "writtenOn": "2019-04-05T08:20:21Z",
      "side": 1,
      "message": "This is redefining the local argument \u0027testcase_file\u0027",
      "range": {
        "startLine": 49,
        "startChar": 32,
        "endLine": 49,
        "endChar": 45
      },
      "revId": "3949a9a0f738eb241ef4926f75d8f547b4f0a036",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d95f14eb_294b3ebe",
        "filename": "bluval/bluval.py",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 43
      },
      "writtenOn": "2019-04-05T12:23:16Z",
      "side": 1,
      "message": "I agree redefining the name is not a great style. Also, the with block is longer than it needs to be. Once you\u0027ve loaded the YAML you don\u0027t need the file anymore. I\u0027d write the entire with block as:\n\n  with open(testcase_file) as f:\n    testcase \u003d yaml.safe_load(f)\n\nand then continue with the rest of your code outdented one level (i.e. not inside of the with block). Also note that I changed testcase_yaml to testcase, because the return value of yaml.safe_load is NOT YAML. It\u0027s a Python dictionary.",
      "parentUuid": "c14cd1d1_bd2c9d12",
      "range": {
        "startLine": 49,
        "startChar": 32,
        "endLine": 49,
        "endChar": 45
      },
      "revId": "3949a9a0f738eb241ef4926f75d8f547b4f0a036",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "052ef5ac_15c08ba8",
        "filename": "bluval/requirements.txt",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 146
      },
      "writtenOn": "2019-04-05T08:20:21Z",
      "side": 1,
      "message": "Is pyyaml needed?",
      "revId": "3949a9a0f738eb241ef4926f75d8f547b4f0a036",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a860ae22_e2982cf0",
        "filename": "bluval/requirements.txt",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 43
      },
      "writtenOn": "2019-04-05T12:23:16Z",
      "side": 1,
      "message": "YAML in Python is a bit weird. The module is actually called PyYAML with exactly that capitalization, but the import statement is\n\n  import yaml\n\nI\u0027m not sure if requirements.txt is case sensitive, but if you run \"pip3 freeze\" (or \"pip freeze\") it definitely lists the YAML module with the capitalization as PyYAML. I don\u0027t believe there is any module called just \"yaml\" in Python.",
      "parentUuid": "052ef5ac_15c08ba8",
      "revId": "3949a9a0f738eb241ef4926f75d8f547b4f0a036",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    }
  ]
}